	SYMBOLIC: func  id left PARA right braceL SYMBOLICBODY braceR;
	PARA: <SYMBOLICPARAS>;
	<SYMBOLICPARAS>:
	{
		single: SYMBOLICPARA;
		multi: <SYMBOLICPARAS> comma SYMBOLICPARA;
	}
	SYMBOLICPARA:
	{
		input: input ID;
		para: para ID;
		output: output ID;
	}
	
	SYMBOLICBODY : STATEMENT*;
	STATEMENT:
	{
		const: CONSTVAR;
		def1: def ID semicolon;
		def2: def ID assign EXP_RIGHT semicolon;
		exp: ID assign EXP_RIGHT semicolon;
	}


	CONSTVAR:
	{
		def1: [type] ID semicolon;
		def2: [type] ID assign VALUE semicolon;
	}
	VALUE: 
	{
		single: EXP_RIGHT;
		multi: squareL VALUELIST squareR;
	}
	VALUELIST: EXP_RIGHT VALUES;
	VALUES: NEXTVALUE*;
	NEXTVALUE: comma EXP_RIGHT;
